#!/usr/bin/env bash


log_info() {
  printf "\x1b[36m[info]\x1b[0m: ${1}\n"
}

log_warn() {
  printf "\x1b[33m[warn]\x1b[0m: ${1}\n"
}

log_error() {
  printf "\x1b[31m[error]\x1b[0m: ${1}\n"
}

print_help() {
  printf "Usage: $0 [-f|-h|-s]

Options:
  -f  Force   Forces operations to proceed, ignoring warnings
  -h  Help    Displays this help message
  -s  Silent  Prevents output from being printed\n"
}

create_symlink() {
  local src="$1"
  local dest="$2"

  if [[ "$opt_silent" != "true" ]]; then
    log_info "linking \'${src}\' -> \'${dest}\'"
  fi

  if [[ -e "$dest" ]]; then
    if [[ "$opt_force" == "true" ]]; then
      rm -rf "$dest"
    else
      if [[ "$opt_silent" != "true" ]]; then
        log_warn "file \'${dest}\' already exists"
      fi

      return
    fi
  fi

  # remove symlink on error
  if ! ln -s "$src" "$dest" &>/dev/null; then
    if [[ "$opt_silent" != "true" ]]; then
      log_error "failed to link \'${src}\' to \'${dest}\'"
    fi

    destroy_symlink "$dest"
    exit 1
  fi
}

destroy_symlink() {
  dest="$1"

  if [[ "$opt_silent" != "true" ]]; then
    log_info "deleting \'${dest}\'"
  fi

  if [[ -d "$dest" ]]; then
    rm -rf "$dest"
  else
    unlink "$dest"
  fi
}

install_dotfiles() {
  if [[ "$opt_silent" != "true" ]]; then
    log_info "installing dotfiles"
  fi

  # create symlinks for each *.zsh file in the repository in the form of
  # ~/.<dotfile>
  for src in $(ls ${DOTFILE_ROOT}/**/*.zsh ${DOTFILE_ROOT}/**/*.sym); do
    dest="${HOME}/.$(basename "${src%.*}")"
    create_symlink "$src" "$dest" 
  done
}

cd "$(dirname "$0")/.."

DOTFILE_ROOT="$(pwd -P)"

while getopts fhs flag; do
  case "${flag}" in
    f)
      opt_force=true
      ;;
    h)
      print_help
      exit 0
      ;;
    s)
      opt_silent=true
      ;;
    *)
      exit 1
      ;;
  esac
done

install_dotfiles
exit 0
